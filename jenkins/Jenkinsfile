pipeline {
    
    agent {
        docker {
            image 'node:20.11.0-alpine3.19'
            args '--user root:root --publish 3000:3000 --publish 5000:5000 --name docker-from-jenkins --volume /var/run/docker.sock:/var/run/docker.sock'
            reuseNode true
        }
    }

    environment {
        CI = 'true'
    }
    
    stages {
        
        stage('Build') { 
            steps {
                sh 'npm install'
            }
        }
        
        stage('Test') {
            steps {
                sh './jenkins/scripts/test.sh'
            }
        }
        
        // Build dell'immagine dell'applicazione
        stage('Build image') {	
            when {
                branch 'development' 
            }
	    environment {
	        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
    	    }
		
            steps {
                echo 'Starting to build docker image'
                
                // Aggiunge docker cli al container
                sh 'apk update && apk add docker-cli docker-cli-buildx sudo'
                //sh 'docker -v'
                //sh 'docker image rm test-image:1'
                //sh 'docker buildx build -h'
                
                //sh 'docker buildx build --force-rm=true -t test-image:${BUILD_ID} -f Dockerfile .'
		//sh 'cat Dockerfile'
                sh 'sudo docker buildx build --force-rm=true -t test-image:${BUILD_ID} -f Dockerfile .'

                // Elimina eventuali dangling images
                //sh 'docker image prune -f'

                // Push image to Dockerhub
		sh 'sudo chmod 0700 ./jenkins/scripts/docker-push.sh'
                sh './jenkins/scripts/docker-push.sh'                		
	        echo 'Push Completed'   
            }
        }

        stage('Deliver for development') {
            when {
                branch 'development' 
            }
            steps {
                // Crea il container
                //sh 'docker run -d -p 3000:3000 --name prova test-image:${BUILD_ID}'
                sh 'docker run -d --name prova${BUILD_ID} --publish 3001:3000 test-image:${BUILD_ID}'

                //sh './jenkins/scripts/deliver-for-development.sh'
                //input message: 'Finished using the web site? (Click "Proceed" to continue)'
                //sh './jenkins/scripts/kill.sh'
            }
        }
        
        stage('Deploy for production') {
            when {
                branch 'production'  
            }
            steps {
                sh './jenkins/scripts/deploy-for-production.sh'
                input message: 'Finished using the web site? (Click "Proceed" to continue)'
                sh './jenkins/scripts/kill.sh'
            }
        }
    }

    post {
    	always {  
      	    sh 'docker logout'           
    	}      
    }
	
}
